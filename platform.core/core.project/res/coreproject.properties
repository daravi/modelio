AbstractFragment.CompatibleMmVersion = The ''{0}'' fragment ''{1} v{2}'' metamodel is outdated but compatible with ''{1} v{3}''.
AbstractFragment.DifferentMmVersion = The ''{0}'' fragment has an outdated metamodel version: ''{1}''.\nCurrent metamodel version is ''{2}''.
AbstractFragment.FutureMmVersion = The ''{0}'' fragment ''{1} v{2}'' metamodel comes from a newer Modelio than the current ''{1}'' metamodel ({3}). \nGet the latest version of Modelio to open it.
AbstractFragment.MissingMetamodelFragment = The ''{0}'' fragment needs the  ''{1} v{2}'' metamodel, which is missing.\nYou may need to deploy an additional module to get it.
AbstractFragment.MmVersionNotSupported = The ''{0}'' fragment''s ''{1} v{2}'' metamodel is outdated compared to the current ''{1} v{3}'' version.

RamcFileFragment.UnspecifiedMmVersion = The ''{0}'' fragment''s metamodel version is not specified. Assume it is the last one.
RamcFileFragment.DifferentMmVersion = The ''{0}'' fragment has an outdated metamodel version: ''{1}''.

BasicMigrationReporter.logFileWritten = A migration log file has been written in "{0}".

ChainedMofFragmentMigrator.noMigrationChainFound = No migration process found to migrate ''{0}'' fragment from ''{1}'' to ''{2}''.
ChainedMofFragmentMigrator.checkModel.conclusion = Open the project with the previous version of Modelio and fix the problems before trying again.
ChainedMofFragmentMigrator.mon.migration = Migrating ''{0}'' model ...
ChainedMofFragmentMigrator.mon.migratingTowardVersion = Migrating ''{0}'' model toward ''{1}'' metamodel ...
ChainedMofFragmentMigrator.mon.rewriteModel = Migrating ''{0}'' model elements, {1} files to process ...
ChainedMofFragmentMigrator.mon.savingModel = Saving ''{0}'' model ...
ChainedMofFragmentMigrator.detail.first = \
The ''{0}'' model will be migrated:\n\
\   from: {1}\n\
\   to:   {2}\n\
with the following steps:
ChainedMofFragmentMigrator.detail.migratorline = from ''{1}'' to ''{2}'' 

ChainedExmlFragmentMigrator.MigrationFailed = ''{0}'' repository migration failed: {1}
ChainedExmlFragmentMigrator.SaveMmVersionNeeded = \
The new metamodel version will be recorded.\n\
This model will then not be accessible anymore by previous Modelio or modules versions.

ExmlFragment.RepositoryFormatNeedMigration = The ''{0}'' repository needs to be migrated from format {1} to {2}.

FragmentMigrationNeededException.message = \
The ''{0}'' model needs to be migrated:\n\
\   from: {1}\n\
\   to:   {2}
FragmentMigrationNeededException.summary = The ''{0}'' model ''{1}'' metamodel is outdated.\nThe model needs to be migrated to the ''{2}'' metamodel.


FragmentMigratorWithBackup.mon.backupData = Making a backup of ''{0}'' model ...
FragmentMigratorWithBackup.mon.archiveBackup = Archiving ''{0}'' model backup to ''{1}'' ...
FragmentMigratorWithBackup.mon.deleteBackup = Deleting ''{0}'' model backup from ''{1}'' ...
FragmentMigratorWithBackup.mon.restoreBackup = Restoring ''{0}'' model backup from ''{1}'' ...
FragmentMigratorWithBackup.mon.deleteBackupArchive = Deleting ''{0}'' model backup archive from ''{1}'' ...
FragmentMigratorWithBackup.restoreBackupFailed = Failed restoring ''{0}'' backup: {1}\nYou will have to move manually the ''{2}'' directory to ''{1}'' before trying again.
FragmentMigratorWithBackup.mon.restoreBackup.done = Restored ''{0}'' model from backup.
FragmentMigratorWithBackup.internalError = Internal error.
FragmentMigratorWithBackup.mon.migration = Migration of ''{0}'' model...

FileModuleStore.unzippingJMdac = Extracting ''{0}'' file ...
FileModuleStoreEntry.doesNotContainDirectory = ''{0}'' does not contain any directory.

GProjectFormatMigrator4.moving = Project migration: moving ''{0}'' to ''{1}''...

RamcPackager.ExportFiles = Exporting files...
RamcPackager.ExportModel = Exporting model...
RamcPackager.ArchiveModelComponent = Archiving RAMC to {0}...
RamcPackager.FileToExportNotFound = ''{0}'' file to export not found.

ModelComponent.BadModelComponentFiles = ''{0}'' model component artifact: '{'{1}({2})'}' tag must have an even number of parameters.

ModuleCacheManager.ErrorReadingModule = Failed reading ''{0}'' module file: {1}
ModuleCacheManager.NoModuleFound = No Modelio module.xml found in ''{0}'' file.
ModuleCacheManager.InvalidMmFragmentVersion = ''{0}'' metamodel fragment ''{1}'' version has invalid format: {2}


ProjectLock.sameVm = The ''{0}'' project is already open by this Modelio instance.

#ProjectLock.otherVm:0=project name, 1=JVM, 2=host name, 3=user, 4=date
ProjectLock.otherVm = The ''{0}'' project is already open by another Modelio instance.\n\
                      It is locked by ''{3}'' on ''{2}''({1}) since {4,date} at {4,time}.
ProjectLock.failure = Couldn''t lock the ''{0}'' project : {1}

RamcFileFragment.ExtractRamcFrom = Extracting ''{0}'' model component from {1} ...
RamcFileFragment.DeployRamcFiles = Deploying ''{0}'' exported files ...
RamcFileFragment.InvalidUri = Invalid ''{0}'' URI : {1}

UnsupportedFragment.DownCause = The ''{0}'' fragment type is not supported.

GProjectConfigurer.NoRemoteProjectDescriptor = No remote project descriptor at ''{0}''.
GProjectConfigurer.Synchronizing = Synchronizing ''{0}'' project ...
GProjectConfigurer.AddingFragment = Adding ''{0}'' fragment...
GProjectConfigurer.RemovingFragment = Removing ''{0}'' fragment...
GProjectConfigurer.DeletingFragment = Deleting ''{0}'' fragment data ...
GProjectConfigurer.SynchronizingFragment = Synchronizing ''{0}'' fragment...

GProject.localRepositoryRecreated = The local model couldn''t be opened. A new empty local model has been recreated. \n\
	Impact models content couldn''t be recovered and are now empty.\n\
	The error was: {0}
GProject.mountingDefaultRepositories = Mounting default repositories...
GProject.mountingDefaultMetamodel = Loading UML metamodel...
GProject.mountingMetamodelFragment = Loading {0} metamodel...
GProject.mountingModules = Mounting modules...
GProject.modelioTooOld = The ''{0}'' project has been created with Modelio {1} and is not compatible with Modelio {2}.\nPlease update Modelio to the {1} version in order to open this project.
GProject.serverVersionDoesNotMatch = The ''{0}'' Constellation project is configured to be open with Modelio {1}.\nYou cannot open it with Modelio {2}.\nUse Modelio {1} to open it, or migrate it to the {2} version in Constellation and join it again.

FragmentConflictException = The ''{0}'' fragment conflicts with the already registered ''{1}'' fragment.

RepositoryRegeneratorMigrator.mon.migration = ''{0}'' model migration...

ModuleCacheManager.FailedExtractStaticModel = Failed extracting static model from ''{0}'':\n {1}
