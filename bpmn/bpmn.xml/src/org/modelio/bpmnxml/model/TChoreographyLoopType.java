/* 
 * Copyright 2013-2018 Modeliosoft
 * 
 * This file is part of Modelio.
 * 
 * Modelio is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 * 
 * Modelio is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 * 
 * You should have received a copy of the GNU General Public License
 * along with Modelio.  If not, see <http://www.gnu.org/licenses/>.
 * 
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a>
// Any modifications to this file will be lost upon recompilation of the source schema.
// Generated on: 2015.12.02 at 02:29:48 PM CET
//
package org.modelio.bpmnxml.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;
import com.modeliosoft.modelio.javadesigner.annotations.objid;

/**
 * <p>Java class for tChoreographyLoopType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="tChoreographyLoopType">
 * &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 * &lt;enumeration value="None"/>
 * &lt;enumeration value="Standard"/>
 * &lt;enumeration value="MultiInstanceSequential"/>
 * &lt;enumeration value="MultiInstanceParallel"/>
 * &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 */
@objid ("a331a028-9f1b-4cfa-9452-147719ee7da2")
@XmlType(name = "tChoreographyLoopType")
@XmlEnum
public enum TChoreographyLoopType {
    @XmlEnumValue("None")
    NONE ("None"),
    @XmlEnumValue("Standard")
    STANDARD ("Standard"),
    @XmlEnumValue("MultiInstanceSequential")
    MULTI_INSTANCE_SEQUENTIAL ("MultiInstanceSequential"),
    @XmlEnumValue("MultiInstanceParallel")
    MULTI_INSTANCE_PARALLEL ("MultiInstanceParallel");

    @objid ("f915e60c-35c2-4b7b-980d-24ae947e193b")
    private final String value;

    @objid ("b8b8377b-70f5-4f34-bac0-c2ae53431987")
    TChoreographyLoopType(String v) {
        this.value = v;
    }

    @objid ("4daa34a0-1ef0-4089-b47b-85af309b258a")
    public String value() {
        return this.value;
    }

    @objid ("d5c99fce-f5ac-4c60-a6a8-72a71460cf41")
    public static TChoreographyLoopType fromValue(String v) {
        for (TChoreographyLoopType c: TChoreographyLoopType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
